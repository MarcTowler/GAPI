<?php
namespace API\Controllers;

use API\Library;
use API\Model;

class Shop extends Library\BaseController
{
	private $_db;

	public function __construct()
	{
		parent::__construct();

		$this->_db = new Model\ShopModel();
	}

	public function __destruct()
	{
		parent::__destruct(); // TODO: Change the autogenerated stub
	}
	
	public function list_shops()
	{
		//list all shops that are "open"
	}

	public function shop_info()
	{
		$this->_log->set_message("Getting shop info of shop id " . $this->_params[0], "INFO");
		
		//displays stored info on the shop, lore, level restrictions, specialty etc
		$shop_id = $this->_params[0];

		$shop          = $this->_db->getShopInfo($shop_id);
		$shop['stock'] = $this->_db->getStock($shop_id);

		return $this->_output->output(200, $shop, false);
	}

	public function get_inventory()
	{
		$this->_log->set_message("Getting inventory of shop id " . $this->_params[0], "INFO");
		$stock = $this->_db->getStock($this->_params[0]);

		return $this->_output->output(200, $stock, false);
	}

	public function buy()
	{
		$this->_log->set_message("Item ID " . $this->_params[2] . " bought by user id " . $this->_params[0] . " from shop " . $this->_params[1], "INFO");
		
		$user = $this->_params[0];
		$shop = $this->_params[1];
		$id   = $this->_params[2];

		$output = $this->_db->buyItem($shop, $user, $id);
		
		return $this->_output->output(200, ["Item bought"], false);
	}

	public function sell()
	{
		$this->_log->set_message("Item ID " . $this->_params[2] . " sold by user id " . $this->_params[0] . " to shop " . $this->_params[1], "INFO");
		//same as above, also needs to check if the item is equipped
		//if equipped, provide feedback in error message
		//floor(value of item * 0.66) << the sell to the shop value
		$user = $this->_params[0];
		$shop = $this->_params[1];
		$id   = $this->_params[2];
		
		$output = $this->_db->sellItem($shop, $user, $id);

		return $this->_output->output(200, ["Item sold"], false);
	}

	public function services()
	{
		//future
	}
    
}